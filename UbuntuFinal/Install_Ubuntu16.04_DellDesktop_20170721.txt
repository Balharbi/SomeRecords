###############################################################################################################################################################
################################################# 1. Download, Burn Image, Install and Check Ubuntu OS ########################################################
###############################################################################################################################################################
	Backup data for installing new OS.  Download Ubuntu LTS from http://www.ubuntu.com
	Burn Image Ubuntu into USB by using UltraISO or USB Installer.   Install Ubuntu by using USB directly.
        Press "Tab" for editing the parameter into "nomodeset".
        Press "e" for editing the parameter before installing Radeon driver.
                                 
	After Install Ubuntu:
     		Check OS and Internet,  Clear Home dir, setting time and workspace, and so on.
                Fix the Terminal to the launcher and set it.
     		Setting gedit:   Edit-->Preferences

	sudo  passwd  root    #set root password  (0577215664)
	su
     	sudo apt update   ##更新软件源. 这个命令，会访问源列表里的每个网址，并读取软件列表，然后保存在本地电脑。我们在新立得软件包管理器里看到的软件列表，都是通过update命令更新的。                                     
     	sudo apt upgrade  ##这个命令，会把本地已安装的软件，与刚下载的软件列表里对应软件进行对比，如果发现已安装的软件版本太低，就会提示你更新。  
     	sudo apt dist-upgrade   ##更新所有软件。

	Solve the problem of  "E: Could not get lock /var/lib/apt/lists/lock - open (11: Resource temporarily unavailable)":
        	sudo killall apt
        	sudo killall synaptic
	Ubuntu software center: 
            	Inkscape Vector Graphics Editor
            	GIMP Image Editor, BleachBit
                Open the Inkscape and GIMP.
	搜狗输入法: 
          	sudo apt install  fcitx   fcitx-config-gtk  fcitx-table-all  im-config    libopencc1  fcitx-libs   fcitx-libs-qt  fonts-droid-fallback  
          	Language Support --> Keyboard input method system --> fcitx --> Apply system-wide
          	http://pinyin.sogou.com/linux
          	download .deb file and install:  sudo  dpkg -i sogoupinyin_2.0.0.0072_amd64.deb 
          	Logout
          	点击右上角的键盘样输入法显示盘， 右击，配置， 添加输入法, 不要勾选“只显示当前语言输入法”， 然后再找到搜狗输入法并添加。
          	Ctrl + Space 切换输入法
	ubuntu禁用Guest用户:
           	sudo  gedit   /usr/share/lightdm/lightdm.conf.d/50-no-guest.conf    ##相当于创建了一个新文件。
           	添加:　　
                	[SeatDefaults]
　               	allow-guest=false
          	重启后生效

	设置浏览器主页： 
                 Firefox: https://github.com/CTLife/SomeRecords/blob/master/WebSites/README.md
        安装PKU VPN要用sudo  dpkg -i 

        Edit hosts "/etc/hosts": https://github.com/racaljk/hosts
        sudo  gedit   /etc/hosts

        sudo apt   autoremove
        sudo apt   update  --fix-missing
        sudo apt   clean
        sudo apt   update
        sudo dpkg  --configure  -a
        sudo apt   install  -f
        sudo apt   upgrade
        sudo apt   dist-upgrade
###############################################################################################################################################################



 

###############################################################################################################################################################
################################################# 2. Install Basic Softwares ##################################################################################
###############################################################################################################################################################
	sudo apt  install  vpnc  git  cmake  qtcreator  build-essential  aptitude  gcc  g++  gfortran   gccgo   vim   qmake
	sudo apt  install  unace unrar lunzip lzip zip unzip p7zip-full p7zip-rar sharutils rar uudeview mpack arj cabextract file-roller 
	sudo apt  install  ubuntu-wallpapers*   edgy-wallpapers  feisty-wallpapers  gutsy-wallpapers        ## more: http://archive.ubuntu.com/ubuntu/pool/main/u/ubuntu-wallpapers/
        sudo apt  install  qconf qt5-default  qt5-qmake qt5-qmake-arm-linux-gnueabihf 
        sudo apt  install g++ qt5-default libqt5xmlpatterns5-dev libqt5sql5-mysql git cmake python-matplotlib 
	搜索安装包命令:   apt search
            	由于有些安装包的名称中包含了版本号，比如“libcurl4-openssl-dev”，这样的名称是很不好记忆的，
            	所以通过“ apt search libcurl”命令就能很方便的查找到该安装包的全称，然后用“apt install libcurl4-openssl-dev”进行安装就行了。

	## sudo apt search libcurl
	sudo apt  install    tclcurl  libcurl3   gnupg   gnupg-curl    libstdc++6   libxt-dev  x11proto-print-dev   ## downlaod: apt download libcurl4-openssl-dev ，  apt source package 
	sudo apt  install    libssl1.0.0  libssl1.0.0-dbg     #For 1.0.0 Version,  apt search libssl
	sudo apt  install    libssl-dev  libssl-doc     gcc-multilib   g++-multilib   freeglut3  freeglut3-dbg   freeglut3-dev
	sudo apt  install    libtk8.6 libtk8.6-dbg   libxt-dev   tk   tk-dev  tk-doc  cluster3  libmotif-common  libmotif-dev  
        sudo apt  install    intltool  gtk+-3.0   appindicator3-0.1     libgtop-2.0   cairo-clock   cairo-dock  cairo-dock-core 
        sudo apt  install    appindicator3-0.1 glib-2.0    gir1.2-glib-2.0  libgtop-2.0   python-gobject   python-gi   
        sudo apt  install    libcurl4-openssl-dev libreadline6-dev libxt-dev libxml2 libxml2-dev libcurl4-openssl-dev curl libxmu-dev libxmuu-dev libcairo2-dev 
        sudo apt  install    libxt-dev tcl-dev tk-dev libicu-dev liblzma-dev libpng12-dev libjpeg-dev libtiff5-dev libtiff5 libcairo2-dev tcl tk tcl-dev tk-dev libffi-dev libssl-dev 
        sudo apt  install    libbz2-1.0  lbzip2   bzip2  bzip2-doc  libarchive-dev  libbz2-dev  xz-utils   liblzma-dev  liblzma5  pxz  xzdec
        sudo apt  install    texlive-full

    #远程登录设置
       		sudo apt install openssh-server
       		启动sshserver命令： sudo service ssh start  或者 sudo /etc/init.d/ssh  start
       		关闭sshserver命令：service ssh stop
       		重启sshserver命令：service ssh restart
       		默认端口是22

       Ubuntu开启IPV6:  sudo apt install miredo
       ubuntu txt 中文乱码 解决办法： gedit  --encoding=GB18030   filename.txt
       
    安装 Unity Tweak Tool: sudo apt install unity-tweak-tool   
    sudo apt  install compiz-plugins  
    sudo apt  install compizconfig-settings-manager  

     Logout
###############################################################################################################################################################




 
###############################################################################################################################################################
################################################# 3. Install programming languages and GUI##################################################################### 
###############################################################################################################################################################
        MyProgramFiles="xxx/.MyProgramFiles"
	Install dir:  $MyProgramFiles/1_Library
	Install dir:  $MyProgramFiles/2_Language
	Install dir:  $MyProgramFiles/3_GUI


        1_Library: 
                  htslib
                  export PATH=$MyProgramFiles/1_Library/htslib/bin:$PATH

        2_Language: 
        gcc,g++,gfortran, gccgo, Java, Go, assembly language, JavaScript, Markup languages, Python 2 and 3, Perl 5 and 6, R and Julia， Shell and SQL.
	Install JAVA8:
       		Add path into ".bashrc":
          	export  JAVA_HOME=$MyProgramFiles/2_Language/jdk     # No space before and after "="
          	export  JRE_HOME=${JAVA_HOME}/jre
          	export  CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib
          	export  PATH=${JAVA_HOME}/bin:$PATH

	Install GO:
	   	export GOROOT=$MyProgramFiles/2_Language/go
	   	export PATH=$GOROOT/bin:$PATH

        Install Google Chrome.

        sudo  ln  /usr/bin/perl   /usr/bin/perl5

	Install Julia:   
               export PATH=$MyProgramFiles/2_Language/julia/bin:$PATH

	Logout  ######## must, for installing perl6

	Install Perl6:
        	sudo apt install  libparrot-dev   libparrot6.6.0   parrot-doc   nqp   parrot   parrot-minimal  libjs-angularjs    libjs-bootstrap   moarvm  libtommath0         	
                perl  Configure.pl  --backend=moar  --gen-moar  -prefix=/media/yp/ProgramFiles/.MyProgramFiles/2_Language/Perl6
        	make
        	make install
        	export PATH=$MyProgramFiles/2_Language/Perl6/bin:$PATH
        	export PATH=$MyProgramFiles/2_Language/Perl6/share/perl6/site/bin:$PATH

        Install SQL:
        sudo apt  install mysql-server  mysql-client  libmysqlclient-dev  (password is 057721)
        sudo netstat -tap | grep mysql
        netstat -tap | grep mysql (是否安装成功)
        mysql -u root -p   (-u 表示选择登陆的用户名， -p 表示登陆的用户密码)
        exit; (退出)

         3_GUI:
   sudo apt install libgstreamer0.10-0  libgstreamer0.10-dev  libgstreamer1.0-0  libgstreamer1.0-dev  libgstreamermm-1.0-dev
	sudo apt install libgstreamer-plugins-base0.10-dev  libgstreamer-plugins-base1.0-0  libgstreamer-plugins-base1.0-dev  libgstreamer0.10-0  libgstreamer0.10-dev 
	 Install all the softwares in "$MyProgramFiles/3_GUI": 
             Java TreeView, IGV, IGB, GSEA, GenePattern, Rstudio, cluster3.0, MeV, Filezilla, SeqMonk, Sublime Text and Atom.
             javaws gsea.jnlp
###############################################################################################################################################################




###############################################################################################################################################################
################################################# 4A. Install python2 packages ################################################################################# 
###############################################################################################################################################################
      	sudo apt    install   libfreetype6  libfreetype6-dev   tk-dev    libatlas-base-dev  libopenblas-base libopenblas-dev   ## apt search  blas 
      	sudo apt    install   libblas-test   libblas-dev   libblas-doc  libblas3                                                          
      	sudo apt    install   libatlas-base-dev  libatlas-dev   libatlas-doc  libatlas-test   libatlas3-base   liblas-bin  liblas-c-dev   liblas-dev
      	sudo apt    install   liblapack-dev   liblapack-doc  liblapack3   liblapacke  liblapacke-dev        ## apt search  lapack   
      	sudo apt    install   liblapack-doc-man    liblapack-pic     liblapack-test   libblas-test          ## apt search  lapack 
      	sudo apt    install   python-cvxopt  python-openturns   python-openturns-dev  python-sparse   python-sparse-examples   python-symeig  python-symeig-dbg   ## apt search  lapack 
      	sudo apt    install   libarmadillo-dev libarmadillo6 libatlas-base-dev  libatlas-cpp-doc libatlas-cpp-0.6-2    libatlas-cpp-0.6-2-dbg    libatlas-cpp-0.6-dev        ## apt search  atlas    
      	sudo apt    install   libatlas-dev   libatlas-doc  libatlas-test  libatlas3-base                                                      ## apt search  atlas    
      	sudo apt    install   libblas-test  libopenblas-base   libopenblas-dev                                             ## apt search  atlas 

      	sudo apt install  python-dev libffi6  libffi6-dbg  libffi-dev openssl libssl-dev  libssl-doc libpng12-dev   libicu-dev   libboost-all-dev   libboost-dev         
      	sudo apt install  libbz2-dev  python-gtk2-dev python-pyside   libssl-dev libevent-dev libjpeg-dev libxml2-dev libxslt1-dev   docbook-xsl python-gtk2-doc 

      	sudo apt  install python-setuptools
      	sudo  easy_install  pip
        sudo  apt install libffi-dev 
      	sudo  pip2  install pyopenssl ndg-httpsclient pyasn1
      	sudo  pip2  install cython   ipython                                       ## sudo -H  pip2  install  --upgrade   cython   ipython              
      	sudo  pip2  install  six   pysam  numpy scipy matplotlib   sklearn         ## sudo -H  pip2  install  --upgrade   six   pysam  numpy scipy matplotlib   sklearn
   
      	sudo apt install python-numpy python-scipy python-matplotlib ipython ipython-notebook python-pandas python-sympy python-nose
      	sudo apt install build-essential python2.7-dev python-numpy python-matplotlib  python-pytools

      	sudo  -H  pip2 install    htseq
        sudo  pip2 install    nose  virtualenv  
      	sudo  pip2 install    theano     ## sudo -H  pip2  install  --upgrade   theano numpy scipy htseq

    	验证BLAS是否安装成功。由于numpy是依赖BLAS的，如果BLAS没有安装成功，虽然numpy亦可以安装，但是无法使用BLAS的加速。
    	验证numpy是否真的成功依赖BLAS编译，用以下代码试验： 
   		>>> import six,numpy,scipy,matplotlib,sklearn,nose,HTSeq,theano
    		>>> id(numpy.dot) == id(numpy.core.multiarray.dot) 
    		False 
    	结果为False表示成功依赖了BLAS加速，如果是Ture则表示用的是python自己的实现并没有加速。
###############################################################################################################################################################    





###############################################################################################################################################################
################################################# 4B. Install python3 packages ################################################################################# 
###############################################################################################################################################################
      	sudo apt install  python3-dev   python3-setuptools    python3-pip 
	sudo  pip3   install  cython              
      	sudo  pip3   install   six  pysam  numpy   scipy  matplotlib   sklearn  
      	sudo  apt   install  python3-numpy python3-scipy python3-matplotlib ipython3 ipython3-notebook python3-pandas   python3-nose
        sudo  pip3   install  HTSeq
      	sudo  pip3  install  theano    ## sudo -H  pip3   install  --upgrade   theano

    	验证BLAS是否安装成功。由于numpy是依赖BLAS的，如果BLAS没有安装成功，虽然numpy亦可以安装，但是无法使用BLAS的加速。
    	验证numpy是否真的成功依赖BLAS编译，用以下代码试验： 
   		>>> import six,numpy,scipy,matplotlib,sklearn,nose,theano
    		>>> id(numpy.dot) == id(numpy.core.multiarray.dot) 
    		False 
    	结果为False表示成功依赖了BLAS加速，如果是Ture则表示用的是python自己的实现并没有加速。
###############################################################################################################################################################    





###############################################################################################################################################################
################################################# 5. Packages for installing R (Before install R, as root)#####################################################
###############################################################################################################################################################
       	sudo apt install   libcurl4-openssl-dev  libreadline6-dev   libxt-dev   libxml2 libxml2-dev libcurl4-openssl-dev curl   libxmu-dev libxmuu-dev   libcairo2-dev     libxt-dev   tcl-dev tk-dev  libicu-dev liblzma-dev  libpng12-dev libjpeg-dev libtiff5-dev libtiff5 libcairo2-dev  tcl tk  tcl-dev tk-dev  libffi-dev libssl-dev                         

        ##### Install R and rpy2:
       		whereis    tclConfig.sh
       		whereis    tkConfig.sh

       		Logout
       		./configure   --with-tcltk   --with-tcl-config=/usr/lib/tclConfig.sh     --with-tk-config=/usr/lib/tkConfig.sh       --with-cairo    --with-x   --enable-R-shlib                        
       		make
       		make  pdf
       		make  info
       		sudo  make install
       		sudo  make install-info
       		sudo  make install-pdf

       	env  ##使用env命令显示所有的环境变量
       	echo  ${LD_LIBRARY_PATH}
          	export R_HOME=/usr/local/lib/R   ##.bashrc
          	export LD_LIBRARY_PATH=/usr/local/lib/R/lib:${R_HOME}/lib:${LD_LIBRARY_PATH}  ##.bashrc
       	Logout   

       	sudo R:
              	install.packages("ggplot2") 
              	source("http://bioconductor.org/biocLite.R") 
              	biocLite("preprocessCore")
              	library(ggplot2)
              	library(preprocessCore)
       	Logout

       	## install rpy2:
                sudo -H  pip2 install  mock
                sudo -H  pip2 install  --upgrade   numexpr
              	sudo  apt   install  r-base-dev r-doc-html r-recommended
              	sudo  apt   install  r-cran-rcppeigen   r-cran-rcpparmadillo   r-other-rot   r-cran-rcmdr
              	sudo  apt   install  python-rpy2   ( sudo -H  pip2 install  --upgrade   rpy2 )     ## for python3: sudo pip3 install rpy2
              	python  -m  rpy2.tests  #运行测试

        Check by -v and which:
           gcc,g++,gfortran, gccgo, Java, Go, assembly language, JavaScript, Markup languages, Python 2 and 3, Perl 5 and 6, R and Julia， Shell and SQL.
###############################################################################################################################################################







 



###############################################################################################################################################################
################################################# 6. Install  R packages #####################################################################################
###############################################################################################################################################################
       install.packages(c("ggplot2", "gplots", "tcltk2"))
       source("http://bioconductor.org/biocLite.R")
       biocLite()
      
       capabilities()["tcltk"]
       library("tcltk2")
       biocLite(c("affy", "limma", "RColorBrewer", "sem", "ALL", "XML", "genefilter", "annotate", "simpleaffy", "AnnotationDbi",  "gcrma", "latticeExtra",  "MantelCorr"))
       biocLite( c( "matrixStats") )
       biocLite( "DelayedArray" )
       biocLite( "SummarizedExperiment" )         
       biocLite( c( "oligoClasses", "oligo", "oligo",  "affyPLM") )

       install.packages( c('Cairo', 'corrplot', 'svglite') )
       install.packages( "httpuv" )  
       install.packages( "shiny" ) 
       biocLite( "interactiveDisplayBase" ) 
       biocLite( c("affycoretools",  "genefilter", "annotate", "GOstats", "goseq") )
       install.packages( c("quadprog",   "pracma") )
       biocLite( c("DESeq", "DESeq2", "EDASeq", "XBSeq", "DEXSeq", "limma", "edgeR" ) )

       library(affycoretools)   
       library(genefilter)
       library(annotate)
       library(GOstats)

       sudo apt-get install g++ qt5-default libqt5xmlpatterns5-dev libqt5sql5-mysql git cmake python python-matplotlib
       install.packages( c('rprojroot', 'bookdown', 'rmarkdown' ) )
       biocLite( c("BiocStyle" , "BBmisc") )  
       install.packages( c(  'brew', 'fail', 'sendmailR', 'rjson', 'pheatmap', 'BatchJobs' ) )
       biocLite(c("Rqc", "ShortRead", "seqTools", "QuasR", "systemPipeR"))

       install.packages( c('zoo', 'TH.data', 'sandwich', 'mnormt', 'extrafontdb', 'Rttf2pt1', 'modeltools', 'mvtnorm', 'multcomp') )
       install.packages( c("reshape2", "RColorBrewer", "gplots", "KernSmooth", "psych", "minerva",  "matrixStats", "extrafont", "coin", "knitr") )
       install.packages( c('Cairo', 'RColorBrewer' ) )

## Install SARtools: 
       sudo apt install  gnupg  gnupg-curl  libcurl4-doc    libcurl4-openssl-dev  libghc-curl-dev  tclcurl libxml2-dev   libssl-dev
       sudo  R
       source("http://bioconductor.org/biocLite.R")
       biocLite(c("DESeq2", "edgeR", "genefilter")) 
       install.packages("R6")
       install.packages(  c("curl",  "httr"))
       install.packages("devtools")
       library(devtools)
       install_github("PF2-pasteur-fr/SARTools", build_vignettes=TRUE)
  
library("DESeq2")
library("edgeR")
library("genefilter")
library("devtools")
library("SARTools")
library("reshape2")
library("ggplot2") 
library("grid")
library("Cairo")
library("RColorBrewer")
library("gplots")  
library("stats")
library("KernSmooth")
library("psych")
library("minerva")
library("matrixStats")
library("coin")
 
library("extrafont")
font_import()
fonts()
fonttable()
loadfonts()
loadfonts(device="postscript")
names(postscriptFonts())

###############################################################################################################################################################









###############################################################################################################################################################
################################################# 7. Install  some packages ##################################################################################
###############################################################################################################################################################
##for ubuntu:
sudo apt install libmotif-dev    libmotif-common  libgtextutils-dev 
sudo apt install mpi-default-dev  libicu-dev   libboost-mpi-dev  libboost-dev  libboost-atomic-dev  
sudo apt install libboost-all-dev  htslib-test   libhts-dev  libhts1   root-system-bin -y 
sudo apt  install  libgd-dbg  libgd-dev  libgd-graph-perl    libgd-perl  libgd-text-perl  libgd3  libgdata-common  libgd-svg-perl  libgd-tools   libgdm-dev  ##apt search libgd
sudo apt -y install  fontconfig   libfreetype6  libfreetype6-dev  libxft-dev  libtiff5-dev     
sudo apt -y install   libpng12-0  libpng12-dev  libpng++-dev  libpng3 libpnglite-dev  tkpng
sudo apt -y install   libjpeg-dev    libjpeg8  libjpeg8-dbg  libjpeg8-dev libxpm-dev  libxpm4  libxpm4-dbg
sudo apt  install  glibc-doc  glibc-doc-reference   libbsd-dev linux-libc-dev 
sudo apt install libgstreamer0.10-0   libgstreamer-plugins-base0.10-0     libjdependency-java  libmaven2-core-java   libeigen2-dev   libeigen3-dev
sudo apt install  libboost-dbg  libboost-dev  libboost-doc libboost-filesystem-dev  libboost-log-dev   libboost-system-dev  libboost-thread-dev
sudo apt install  libboost-all-dev    libboost-atomic-dev    libboost-chrono-dev    libboost-context-dev    libboost-locale-dev   libboost-math-dev
sudo apt install  bonnie++  gnuplot  gnuplot-doc  gnuplot-mode  
sudo apt install libgsl-dbg  libgsl-dev  libgsl2    gsl-doc-info gsl-doc-pdf gsl-bin gsl-ref-html gsl-ref-psdoc 
sudo apt install perl-doc
sudo apt  install  liblzma-dev  liblzma-doc  libcrypto++-utils  sphinx-doc
sudo apt  install  libtool  glibc-doc  manpages-posix-dev  
sudo apt  install  jellyfish
sudo apt  install  libmeep-openmpi-dev openmpi-bin  openmpi-doc libopenmpi-dev  
sudo apt  install  g++ qt5-default libqt5xmlpatterns5-dev libqt5sql5-mysql git cmake python python-matplotlib
sudo apt  install  virtualenv libtool  pthreads*  libboost-all-dev  sphinx-doc 
sudo apt  install  seqan-dev
sudo apt  install libcr-dev libmpich-dev  libmpich12  libscalapack-mpi-dev  meep-mpi-default  meep-mpich2 mpb-mpi zlibc xmpi
sudo apt  install  mpi-default-bin  mpi-default-dev  mpich  mpich-doc  libcrack2-dev  libcrcutil-dev libssl-dev libssl-doc   libxcrypt-dev 
sudo apt  install  minitube   
sudo apt  install  python3-dev python3-numpy python3-setuptools python3-matplotlib
sudo apt  install  zlib1g-dev libbz2-dev libboost-dev libgomp1
sudo apt  install python-numpy python-scipy zlib1g-dev python-setuptools; 
sudo apt  install libexpat1-dev  zlib1g-dev  autoconf  automake  libtool  
For mega: sudo dpkg -i megacc_7.0.26-1_amd64.deb




##for perl5:
sudo cpan    install  Module::Build
(Download http://search.cpan.org/~lds/GD-2.56/lib/GD.pm:  such as GD-2.56.tar.gz    and Install)   
(You can use "sudo perl -MCPAN -e shell"  or  "sudo cpan    install ")
sudo cpan    install  PerlIO::gzip
sudo cpan    install  YAML
sudo cpan    install  GD 
sudo cpan    install  GD::Graph
sudo cpan    install  GD::Graph::bars   File::pushd  MooseX::Params::Validate    # HPCI
sudo cpan    install PerlIO::gzip   GD::Graph::bars
sudo cpan install DateTime File::Slurp HPCI
sudo cpan install Getopt::Long Pod::Usage  File::Temp  Fcntl  Digest::MD5  Cwd  List::Util  JSON  Cairo  Statistics::PCA  MIME::Base64
sudo cpan install File::Basename  FindBin  Getopt::Long  HTML::Template   threads threads::shared
sudo cpan install Set::IntervalTree  DocSet 
sudo cpan install  Parallel::ForkManager  String::Approx
sudo cpan install  Getopt::Long   Pod::Usage   File::Temp   Fcntl   Digest::MD5   Cwd   List::Util  File::Path IO::Uncompress::AnyUncompress
sudo cpan install  JSON   Cairo   Statistics::PCA   MIME::Base64  CGI LWP::Simple  File::Basename
sudo cpan install  File::Basename FindBin Getopt::Long HTML::Template threads threads::shared 
# sudo cpan install  File::Copy   source::bamSummary source::fastqSummary source::makeReport source::vcfSummary                   
sudo cpan install Math::CDF  IO::Uncompress::Gunzip  
   
   
   
   

 

##for python2.7:
sudo pip2 install pysam   coverage eta swalign  pyBigWig
sudo  -H  pip2  install   setuptools  pyparsing cython numpy MySQL-python PyYAML alignlib-lite biopython drmaa  hgapi  matplotlib-venn   matplotlib  networkx   openpyxl   pandas pysam  rdflib 
sudo  -H  pip2  install   psycopg2 rpy2  ruffus  scipy  bx-python  sphinx  sphinxcontrib-programoutput  sqlalchemy  threadpool  web.py  weblogo  xlwt  pybedtools  pep8  CGATReport  cgat
sudo  -H  pip2  install  --upgrade   setuptools  pyparsing cython numpy MySQL-python PyYAML alignlib-lite biopython drmaa  hgapi  matplotlib-venn   matplotlib  networkx   openpyxl   pandas pysam  rdflib 
sudo  -H  pip2  install  --upgrade   psycopg2 rpy2  ruffus  scipy  bx-python  sphinx  sphinxcontrib-programoutput  sqlalchemy  threadpool  web.py  weblogo  xlwt  pybedtools  pep8  CGATReport  cgat
sudo pip2  install CrossMap   deeptools  jellyfish  illuminate
sudo pip2 install   fastqp   fastools  MultiQC  editdistance
sudo pip2 install   pysam  coverage  eta   swalign   atropos
sudo pip2 install   cutadapt fastqp  fastools MultiQC  kPAL
sudo pip2 install   ezBAMQC  MACS2
sudo pip2 install  RGT
sudo pip2 install  PePr
sudo pip2 install  pybloom  
  


##for python3.6: 
sudo  -H  pip3 install   setuptools  pyparsing cython numpy   PyYAML alignlib-lite biopython drmaa  hgapi  matplotlib-venn   matplotlib  networkx   openpyxl   pandas pysam  rdflib 
sudo  -H  pip3 install   psycopg2 rpy2  ruffus  scipy  bx-python  sphinx  sphinxcontrib-programoutput  sqlalchemy  threadpool   weblogo  xlwt  pybedtools  pep8  
sudo  -H  pip3 install  --upgrade   setuptools  pyparsing cython numpy   PyYAML alignlib-lite biopython drmaa  hgapi  matplotlib-venn   matplotlib  networkx   openpyxl   pandas pysam  rdflib 
sudo  -H  pip3 install  --upgrade   psycopg2 rpy2  ruffus  scipy  bx-python  sphinx  sphinxcontrib-programoutput  sqlalchemy  threadpool  weblogo  xlwt  pybedtools  pep8   
sudo pip3 install Atropos
 



 

## for R:
   install.packages("doMC", dep=T)
   install.packages("caTools", dep=T)
   install.packages("utils", dep=T)
   source("http://bioconductor.org/biocLite.R")
   biocLite( c("BSgenome", "Rsamtools", "ShortRead") )
   biocLite( c("Rqc", "seqTools", " systemPipeR") )
install.packages("svglite")
source("https://bioconductor.org/biocLite.R")
biocLite("htSeqTools")
biocLite("BatchQC")
install.packages("preseqR", dep=T) 
require(devtools)
devtools::install_github('hms-dbmi/spp', build_vignettes = FALSE)

install.packages("snow", repos="http://cran.us.r-project.org")
install.packages("snowfall", repos="http://cran.us.r-project.org")
install.packages("bitops", repos="http://cran.us.r-project.org")
install.packages("caTools", repos="http://cran.us.r-project.org")
source("http://bioconductor.org/biocLite.R")
biocLite("Rsamtools",suppressUpdates=TRUE)
# install.packages("./spp_1.14.tar.gz")  ## under the dir  phantompeakqualtools-1.2
install.packages("robustreg")

source("http://www.braju.com/R/hbLite.R") 
hbLite("R.basic")

source("http://bioconductor.org/biocLite.R")
biocLite("ChIPseeker")
biocLite("seq2pathway")
biocLite("DiffBind")
biocLite("ChIPComp")
biocLite("csaw")

library("ChIPseeker")
library("seq2pathway")
library("DiffBind")
library("ChIPComp")
library("csaw")

biocLite("normr")
biocLite("chromstaR")
biocLite("GenoGAM")
                                           
###############################################################################################################################################################






###############################################################################################################################################################
################################################# 8. Install Pipelines ##################################################################################
###############################################################################################################################################################
edlib-aligner
bgzip , tabix 

gcc --version     
g++  --version
gfortran  --version
gccgo --version
java -version , javac -version
go version
python -V , python3 -V
perl5 -v , perl6 -v
R --version              
julia -v

cluster -v
filezilla -v
which gsea.jar
which igv.sh
which igv3.sh
which igvtools
which tmev.sh
which rstudio
which seqmonk
which sublime_text
which TreeView.jar

seqtk , fastq-dump --help

after.py  --version
FaQCs.pl  -v
fastqc
fastq_screen -v
kat --version
BedAnnotateGenes  
ngsutils , bamutils , bedutils , fastqutils , gtfutils  
prinseq-lite.pl 
qc3.pl  -h
SolexaQA++  -h
fastqp -h
fastools -h
multiqc  --version
kpal -h
illuminate -h
ReadQC  --help
MappingQC    --help


bbduk.sh , bbduk2.sh, bbmap.sh , clumpify.sh, mapPacBio.sh
bbcountunique.sh   -h  ## CalcUniqueness in BBmap ,  http://jgi.doe.gov/data-and-tools/bbtools/bb-tools-user-guide/calcuniqueness-guide/
lighter   -v
ParDRe   -h


AdapterRemoval -v
flexbar -v
nxtrim  
SeqPrep
trim_galore  -v
which trimmomatic.jar
cutadapt --version
SeqPurge

bowtie2  --version
bwa
gmap --version , gsnap --version
mrsfast  -v
ngm
novoalign  --help
razers3  --version
stampy.py   
subread-align -v , subjunc -v 
yara_mapper  --help

bammarkduplicates  -h
bammarkduplicates2  -h
goleft -h
idr  -h
NGSQC  -h
which  run_spp.R
which  picard.jar
preseq
qualimap  -h
sambamba  -h
samstat   -h

macs2 -h
Q -h
which gem.jar
rgt-THOR  -h
rgt-ODIN  -h
PePr -h
which MAnorm.sh
rgmatch.py  -h


findPeaks  -h
getDifferentialPeaks   -h
mergePeaks   -h
danpos.py   -h
StereoGene  -h
htseq-qa  -h
htseq-count  -h

which  ChromHMM.jar
meme -version
chipcenter
chipcor
chipextract
chippart
chippeak
chipscore

hisat2  --version 

bisar --help 
 
bcftools  --version
which  GenomeAnalysisTK.jar
gt --version
vcftools  --version 

bedops
bedtools  --version
samtools
bedCommonRegions
bedCoverage
bedGraphToBigWig
bedIntersect
bedPileUps
bedRemoveOverlap
calc
wigToBigWig
wigCorrelate
CrossMap.py  -h

svm-predict
svm-scale
svm-train
pse.py  -h
blastn
blastp
blastx




















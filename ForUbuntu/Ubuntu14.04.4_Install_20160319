###############################################################################################################################################################
################################################# 1. Download, Burn Image, Install and Check UBUNTU OS ########################################################
###############################################################################################################################################################
Backup data for installing new OS.  Download Ubuntu from http://www.ubuntu.com
Burn Image Ubuntu into USB by using UltraISO or USB Installer.   Install Ubuntu by using USB directly.
                                 
After Install Ubuntu:
     Check OS and Internet,  Clear Home dir, setting time and workspace, and so on.
     Setting gedit:   Edit-->Preferences
     sudo apt-get update   ##更新软件源. 这个命令，会访问源列表里的每个网址，并读取软件列表，然后保存在本地电脑。我们在新立得软件包管理器里看到的软件列表，都是通过update命令更新的。                                     
     sudo apt-get upgrade  ##这个命令，会把本地已安装的软件，与刚下载的软件列表里对应软件进行对比，如果发现已安装的软件版本太低，就会提示你更新。  
     sudo apt-get dist-upgrade   ##更新所有软件。

    Solve the problem of  "E: Could not get lock /var/lib/apt/lists/lock - open (11: Resource temporarily unavailable)":
        sudo killall apt
        sudo killall apt-get
        sudo killall synaptic

   Ubuntu software center: 
            Unarchiver for .rar files (non-free version) (unrar), 7zip, Adobe Flash plugin

   Google hosts:  http://laod.cn/hosts/2016-google-hosts.html  
        sudo gedit  /etc/hosts                 

   搜狗输入法: 
          sudo apt-get install  fcitx   fcitx-config-gtk  fcitx-table-all  im-config  
          Language Support --> Keyboard input method system --> fcitx --> Apply system-wide
          http://pinyin.sogou.com/linux
          download .deb file and install
          Logout
          点击右上角的键盘样输入法显示盘， 右击，配置， 添加输入法, 不要勾选“只显示当前语言输入法”， 然后再找到搜狗输入法并添加。
###############################################################################################################################################################





###############################################################################################################################################################
################################################# 2. Install Basic Softwares ##################################################################################
###############################################################################################################################################################
sudo  passwd  root    #set root password  (gata4mef2)
su
sudo apt-get install aptitude
sudo apt-get install gcc
sudo apt-get install g++    
sudo apt-get install gfortran
sudo apt-get install gccgo  (or  sudo aptitude install gccgo )
sudo aptitude install vim   vim-common  vim-doc   vim-runtime
sudo aptitude install cmake qtcreator      ##CMake和Qt Creator是Linux下开发C++程序的神器
   gcc -v
   g++ -v
   gfortran -v
   gccgo  -v
   vim

sudo apt-get install vpnc git 
 
Install google chrome:    www.google.com/chrome

ubuntu禁用Guest用户:
           sudo  vim   /usr/share/lightdm/lightdm.conf.d/50-no-guest.conf    ##相当于创建了一个新文件。
           添加:　　
                [SeatDefaults]
　               allow-guest=false
          重启后生效
         
更新系统:     sudo aptitude install build-essential
              sudo  apt-get    update
              sudo  apt-get    upgrade
              sudo  aptitude   update
              sudo  aptitude   upgrade
              Log Out

sudo aptitude install unace unrar lunzip lzip zip unzip p7zip-full p7zip-rar sharutils rar uudeview mpack arj cabextract file-roller 
sudo apt-get install   ubuntu-wallpapers-*                 
sudo aptitude install   edgy-wallpapers  feisty-wallpapers  gutsy-wallpapers    #For convenience for users looking to download ALL the wallpapers                   
###############################################################################################################################################################





###############################################################################################################################################################
################################################# 3. Install Softwares through Ubuntu Software Center ######################################################### 
###############################################################################################################################################################
These languages should be available: C, C++, Fortran, Go, Perl5, Python2, Python3.
Install softwares via Ubuntu Software Center:
            Inkscape Vector Graphics Editor
            GIMP Image Editor
            Texmaker
            PyCAD
###############################################################################################################################################################





###############################################################################################################################################################
################################################# 4. Softwares for installing programming languages ########################################################### 
###############################################################################################################################################################
sudo  aptitude  install qt4-dev-tools qt4-doc qt4-qtconfig qt4-demos qt4-designer qt4-dev-tools  qdevelop   
sudo  apt-get update         (sudo  aptitude update)   
sudo  apt-get upgrade        (sudo  aptitude safe-upgrade)
sudo  apt-get dist-upgrade   (sudo  aptitude full-upgrade)
sudo  aptitude  install  build-essential   make
sudo  aptitude  install   gnu  gnupg  gnupg-curl

搜索安装包命令:   apt-cache search
            由于有些安装包的名称中包含了版本号，比如“libcurl4-openssl-dev”，这样的名称是很不好记忆的，
            所以通过“ apt-cache search    libcurl”命令就能很方便的查找到该安装包的全称，然后用“apt-get install libcurl4-openssl-dev”进行安装就行了。

sudo apt-cache search libcurl
sudo aptitude install libcurl4-doc libcurl4-gnutls-dev  libcurl4-nss-dev  libcurl4-openssl-dev    ## downlaod: apt-get download libcurl4-openssl-dev             apt-get source package
sudo aptitude install    libcurl4-openssl-dev
sudo apt-get install python-pycurl   python-pycurl-dbg
sudo apt-get install libpcre3-dev

sudo apt-get install libstdc++6   libxt-dev
sudo aptitude install x11proto-print-dev
sudo aptitude install libssl1.0.0  libssl1.0.0-dbg     #For 1.0.0 Version,  apt-cache search libssl
sudo aptitude install libssl-dev  libssl-doc  
sudo apt-get install gcc-multilib
sudo apt-get install g++-multilib
sudo apt-get install freeglut3  freeglut3-dbg   freeglut3-dev
sudo apt-get install libtk8.6 libtk8.6-dbg   libxt-dev   tk   tk-dev  tk-doc  cluster3  libmotif-common  libmotif-dev
###############################################################################################################################################################





###############################################################################################################################################################
################################################# 5. Install programming languages ######################################################################### 
###############################################################################################################################################################
Install dir:  $HOME/.MyProgramFiles/2_Lang

Install JAVA8:
       Add path into ".bashrc":
          export  JAVA_HOME=$HOME/.MyProgramFiles/2_Lang/jdk1.8.0_73     # No space before and after "="
          export  JRE_HOME=${JAVA_HOME}/jre
          export  CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib
          export  PATH=${JAVA_HOME}/bin:$PATH

Install GO:
	   export GOROOT=$HOME/.MyProgramFiles/2_Lang/go
	   export PATH=$GOROOT/bin:$PATH

Install Julia:   export PATH=$HOME/.MyProgramFiles/2_Lang/julia/bin:$PATH

Logout  ######## must, for installing perl6

Install Perl6:
        sudo apt-get install  libparrot5.9.0    parrot-doc   nqp   parrot   parrot-minimal
        perl  Configure.pl  --backend=moar  --gen-moar  -prefix=$HOME/.MyProgramFiles/2_Lang/Perl6
        make
        make install
        export PATH=$HOME/.MyProgramFiles/2_Lang/Perl6/bin:$PATH

Logout (or source ~/.bashrc) and then:
        perl6 -v
        python3 -V
        java    -version
        javac   -version
        go  version
        which go 
        which java
        which javac
        which perl6
        julia
        perl -v
        perl5 -v
        python -V
        python2 -V
        python2.7  -V
###############################################################################################################################################################





###############################################################################################################################################################
################################################# 6. Install Editor, IDE and Internet ######################################################################### 
###############################################################################################################################################################
sudo aptitude install gir1.2-spice-client-glib-2.0  libspice-client-glib-2.0-dev  gtk2-engines-murrine   gtk2-engines-aurora
sudo aptitude install  gir1.2-grip  gir1.2-gtk-2.0   gir1.2-gtk-3.0  gtk2-engines   libcanberra-gtk-common-dev  libcanberra-gtk-dev libglib2.0-0 libglib2.0-dev
sudo apt-get install  libgtk2.0-0   libgtk2.0-bin   libgtk2.0-common  libgtk2.0-dev
sudo apt-get install  bacula-common-sqlite3 bacula-director-sqlite3  bacula-sd-sqlite3 libdbd-sqlite3  libdbd-sqlite3-perl
sudo apt-get install  libsqlite3-dev  sqlite3   db6.0-sql-util   libsqlite3-tcl

Install all the softwares in "$HOME/.MyProgramFiles/12_GUI-Softwares".


#远程登录设置
       sudo apt-get install openssh-server
       启动sshserver命令：service ssh start   (or sudo service ssh start )
                        或者sudo /etc/init.d/ssh  start
       关闭sshserver命令：service ssh stop
       重启sshserver命令：service ssh restart
       默认端口是22

       Ubuntu开启IPV6:  sudo apt-get install miredo
       ubuntu txt 中文乱码 解决办法： gedit  --encoding=GB18030   filename.txt

##We can be able to see Open in terminal option on right-clicking, if we install:
sudo apt-get install nautilus-open-terminal
sudo apt-get install nautilus-actions
nautilus -q 

Logout
###############################################################################################################################################################





###############################################################################################################################################################
################################################# 7A. Install python2 packages ################################################################################# 
###############################################################################################################################################################
      sudo apt-get    install   libfreetype6  libfreetype6-dev   tk-dev    libatlas-base-dev  libopenblas-base libopenblas-dev   ## apt-cache search  blas 
      sudo apt-get    install   libblas-test   libblas-dev   libblas-doc  libblas3  libgsl0-dbg  libgsl0ldbl                                                         
      sudo apt-get    install   libatlas-base-dev  libatlas-dev   libatlas-doc  libatlas-test   libatlas3-base  libatlas3gf-base   
      sudo apt-get    install   libblas3gf  liblas-bin  liblas-c-dev   liblas-dev                                                             
      sudo apt-get    install   liblapack-dev   liblapack-doc  liblapack3   liblapacke  liblapacke-dev        ## apt-cache search  lapack   
      sudo apt-get    install   liblapack-doc-man    liblapack-pic     liblapack-test   libblas-test          ## apt-cache search  lapack 
      sudo apt-get    install   python-cvxopt  python-openturns   python-openturns-dev  python-sparse   python-sparse-examples   python-symeig  python-symeig-dbg   ## apt-cache search  lapack 
      sudo apt-get    install   libatlas-base-dev  libatlas-cpp-doc libatlas-cpp-0.6-1    libatlas-cpp-0.6-1-dbg    libatlas-cpp-0.6-dev        ## apt-cache search  atlas    
      sudo apt-get    install   libatlas-dev   libatlas-doc  libatlas-test  libatlas3-base                                                      ## apt-cache search  atlas    
      sudo apt-get    install   libatlas3gf-base   libblas-test  libopenblas-base   libopenblas-dev                                             ## apt-cache search  atlas 

      sudo apt-get install  python-dev libffi6  libffi6-dbg  libffi-dev openssl libssl-dev  libssl-doc libpng12-dev   libicu-dev   libboost-all-dev   libboost-dev         
      sudo apt-get install  libbz2-dev  python-gtk2-dev python-pyside   libssl-dev libevent-dev libjpeg-dev libxml2-dev libxslt1-dev   docbook-xsl python-gtk2-doc 

      sudo aptitude install python-setuptools
      sudo  easy_install  pip   
      sudo  pip install pyopenssl ndg-httpsclient pyasn1
      sudo  pip   install cython
      sudo  pip  install ipython
             
      sudo  pip   install  six
      sudo  pip   install  pysam
      sudo  pip   install  numpy
      sudo  pip   install  scipy
      sudo  pip   install  matplotlib  
      sudo  pip   install  sklearn    

      sudo apt-get install python-numpy python-scipy python-matplotlib ipython ipython-notebook python-pandas python-sympy python-nose
      sudo apt-get install build-essential python2.7-dev python-numpy python-matplotlib
      sudo apt-get install python-pytools

      sudo  -H  pip  install    htseq
      sudo  apt-get  install    libcublas5.5   libcudart5.5  libcufft5.5   libcufftw5.5   libcuinj64-5.5  libcupti-dev   libcupti-doc  
      sudo  apt-get  install    libcupti5.5    libcurand5.5  libcusparse5.5  libnppc5.5   libnppi5.5   libnpps5.5  libnvvm2
      sudo  apt-get  install    libthrust-dev  nvidia-cuda-dev   nvidia-cuda-doc  nvidia-cuda-gdb  nvidia-cuda-toolkit  nvidia-nsight  nvidia-profiler  nvidia-visual-profiler
      sudo  aptitude  install   pyrit   suricata    libcuda1-352  libcuda1-352-updates
      sudo  apt-get  install    boinc-nvidia-cuda  primus  bumblebee    libvdpau-dev nvidia-cuda-doc nvidia-cuda-gdb 
      sudo  apt-get  install    nvidia-prime nvidia-settings nvidia-visual-profiler python-pycuda-doc
      sudo  apt-get  install    python-pycuda  python-pycuda-dbg    python-pycuda-doc  
      sudo  pip  install  theano 

    测试Theano安装情况,在python中输入以下两行代码：
             import theano
             theano.test()

    验证BLAS是否安装成功。由于numpy是依赖BLAS的，如果BLAS没有安装成功，虽然numpy亦可以安装，但是无法使用BLAS的加速。
    验证numpy是否真的成功依赖BLAS编译，用以下代码试验： 
    >>> import six,numpy,scipy,matplotlib,sklearn,nose,HTSeq,pycuda,theano
    >>> id(numpy.dot) == id(numpy.core.multiarray.dot) 
    False 
    结果为False表示成功依赖了BLAS加速，如果是Ture则表示用的是python自己的实现并没有加速。
###############################################################################################################################################################    





###############################################################################################################################################################
################################################# 7B. Install python3 packages ################################################################################# 
###############################################################################################################################################################
      sudo apt-get install  python3-dev       
      sudo aptitude install python3-setuptools
      sudo apt-get install  python3-pip   
      sudo pip3   install pyopenssl ndg-httpsclient pyasn1
      sudo pip3   install cython
      sudo pip3  install ipython
             
      sudo  pip3   install   six
      sudo  pip3   install   pysam
      sudo  pip3   install  numpy
      sudo  pip3   install  scipy
      sudo  pip3   install  matplotlib  
      sudo  pip3   install  sklearn    
      sudo  apt-get   install  python3-numpy python3-scipy python3-matplotlib ipython3 ipython3-notebook python3-pandas   python3-nose

      sudo apt-get   install   python3-pycuda   python3-pycuda-dbg  python3-pytools
      sudo  pip3  install  theano 

    测试Theano安装情况,在python3中输入以下两行代码：
             import theano
             theano.test()

    验证BLAS是否安装成功。由于numpy是依赖BLAS的，如果BLAS没有安装成功，虽然numpy亦可以安装，但是无法使用BLAS的加速。
    验证numpy是否真的成功依赖BLAS编译，用以下代码试验： 
    >>> import six,numpy,scipy,matplotlib,sklearn,nose,pycuda,theano
    >>> id(numpy.dot) == id(numpy.core.multiarray.dot) 
    False 
    结果为False表示成功依赖了BLAS加速，如果是Ture则表示用的是python自己的实现并没有加速。
###############################################################################################################################################################    





###############################################################################################################################################################
################################################# 8. Packages for installing R (Before install R, as root)#####################################################
###############################################################################################################################################################
       sudo apt-get install libcurl4-openssl-dev  libreadline6-dev   libxt-dev 
       sudo apt-get install libxml2 libxml2-dev libcurl4-openssl-dev curl
       sudo apt-get install libX11-dev libXext-dev libXtst-dev libXrender-dev libxmu-dev libxmuu-dev 
       sudo apt-get install libcairo2-dev     libxt-dev 
       sudo apt-get -y install tcl-dev tk-dev
       sudo apt-get -y install libicu-dev liblzma-dev
       sudo apt-get -y install libpng12-dev libjpeg-dev libtiff5-dev libtiff5 libcairo2-dev
       sudo apt-get install tcl tk  tcl-dev tk-dev
       sudo apt-get install libffi-dev libssl-dev

       安装 LaTeX:
              sudo apt-get install texlive-base  texstudio texlive-latex-base texlive-full  texlive-xetex   texlive-latex-recommended
              sudo apt-get install  context-modules fonts-gfs-bodoni-classic fonts-gfs-didot-classic fonts-gfs-gazis fonts-gfs-theokritos ko.tex-extra-hlfont   libxml-sax-expat-perl ps2eps swath
              apt-cache search cjk
              sudo apt-get install latex-cjk-all    cjk-latex   latex-cjk-chinese
              sudo apt-get install texmaker
###############################################################################################################################################################





###############################################################################################################################################################
################################################# 9. Install R and rpy2 #######################################################################################
###############################################################################################################################################################
       whereis    tclConfig.sh
       whereis    tkConfig.sh

       Logout
       ./configure   --with-tcltk   --with-tcl-config=/usr/lib/tclConfig.sh     --with-tk-config=/usr/lib/tkConfig.sh       --with-cairo    --with-x   --enable-R-shlib
       make
       make  pdf
       make  info
       sudo  make install
       sudo  make install-info
       sudo  make install-pdf

       env  ##使用env命令显示所有的环境变量
       echo  ${LD_LIBRARY_PATH}
          export R_HOME=/usr/local/lib/R   ##.bashrc
          export LD_LIBRARY_PATH=/usr/local/lib/R/lib:${R_HOME}/lib:${LD_LIBRARY_PATH}  ##.bashrc
       Logout   

       sudo R:
              install.packages("ggplot2") 
              source("http://bioconductor.org/biocLite.R") 
              biocLite("preprocessCore")
              library(ggplot2)
              library(preprocessCore)
       Logout

       ## install rpy2:
              sudo  apt-get   install  r-base-dev r-doc-html r-recommended
              sudo  apt-get   install  r-cran-rcppeigen   r-cran-rcpparmadillo   r-other-rot   r-cran-rcmdr
              sudo  apt-get   install  python-rpy2   ( sudo  pip  install  --upgrade   rpy2 )     ## for python3: sudo pip3 install rpy2
              python  -m  rpy2.tests  #运行测试

###############################################################################################################################################################





###############################################################################################################################################################
################################################# 10. Install  R packages #####################################################################################
###############################################################################################################################################################
       install.packages("ggplot2")
       install.packages("gplots")
       install.packages("tcltk2")
       source("http://bioconductor.org/biocLite.R")
       biocLite()
      
       capabilities()["tcltk"]
       library("tcltk2")
       biocLite(c("affy", "limma", "RColorBrewer", "sem", "ALL", "XML"))
       biocLite(c("genefilter", "annotate", "simpleaffy", "AnnotationDbi",  "gcrma"))  
       biocLite( c("latticeExtra",  "MantelCorr") )
       biocLite( c("oligo", "pd.mogene.1.0.st.v1",  "mogene10stv1cdf", "mogene10stprobeset.db", "affyPLM") )

       install.packages( c('Cairo', 'corrplot') )

       biocLite( c("affycoretools",  "genefilter", "annotate", "GOstats", "goseq") )
       biocLite( c("DESeq", "DESeq2", "EDASeq", "XBSeq", "DEXSeq", "limma", "edgeR" ) )

       library(affycoretools)
       library(genefilter)
       library(annotate)
       library(GOstats)

       biocLite("mogene10stv1cdf")
       biocLite("mogene10stv1probe")
       biocLite("mogene.1.0.st.v1frmavecs")
       biocLite(c("mogene10sttranscriptcluster.db", "mogene10stprobeset.db"))

       install.packages( c("reshape2", "RColorBrewer", "gplots", "KernSmooth", "psych", "minerva",  "matrixStats", "extrafont", "coin", "knitr") )

## Install SARtools: 
       sudo aptitude install  libxml2-dev  libcurl4-dev   libssl-dev
       sudo  R
       source("http://bioconductor.org/biocLite.R")
       biocLite(c("DESeq2", "edgeR", "genefilter")) 
       install.packages("R6")
       ##  install  curl and  httr  by using "sudo R CMD INSTALL"
       install.packages("devtools")
       library(devtools)
       install_github("PF2-pasteur-fr/SARTools", build_vignettes=TRUE)
  
library("DESeq2")
library("edgeR")
library("genefilter")
library("devtools")
library("SARTools")
library("reshape2")
library("ggplot2") 
library("grid")
library("Cairo")
library("RColorBrewer")
library("gplots")  
library("stats")
library("KernSmooth")
library("psych")
library("minerva")
library("matrixStats")
library("coin")
 
library("extrafont")
font_import()
fonts()
fonttable()
loadfonts()
loadfonts(device="postscript")
names(postscriptFonts())


###############################################################################################################################################################





###############################################################################################################################################################
################################################# 11. Install  some packages ##################################################################################
###############################################################################################################################################################
sudo apt-get install libmotif-dev  libmotif4  libmotif-common    ##install openmotif for installing cluster 3.0
Install boost c++:
             sudo aptitude install mpi-default-dev
             sudo aptitude install libicu-dev   libboost-mpi-dev  libboost-dev  libboost-atomic-dev
             ##aptitude search boost
             sudo aptitude install libboost-all-dev  htslib-test   libhts-dev  libhts0   root-system-bin -y 

sudo aptitude  install  libgtextutils-dev
sudo aptitude  install  libgd-dbg  libgd-dev  libgd-graph-perl    libgd-perl  libgd-text-perl  libgd3  libgdata-common  libgd-svg-perl  libgd-tools   libgdm-dev  ##apt-cache search libgd
sudo apt-get -y install  fontconfig   libfreetype6  libfreetype6-dev  libxft-dev  libtiff5-dev     
sudo apt-get -y install   libpng12-0  libpng12-dev  libpng++-dev  libpng3 libpnglite-dev  tkpng
sudo apt-get -y install   libjpeg-dev    libjpeg8  libjpeg8-dbg  libjpeg8-dev libxpm-dev  libxpm4  libxpm4-dbg

sudo aptitude  install glibc-pic  glibc-doc  glibc-doc-reference  glibc-source libbsd-dev linux-libc-dev 


## Must:
Download http://search.cpan.org/~lds/GD-2.56/lib/GD.pm:  such as GD-2.56.tar.gz    and Install   

## You can use "sudo perl -MCPAN -e shell"  or  "sudo cpan    install "
sudo cpan    install  PerlIO::gzip
sudo cpan    install  YAML
sudo cpan    install  GD 
sudo cpan    install  GD::Graph
sudo cpan    install  GD::Graph::bars   File::pushd  MooseX::Params::Validate   HPCI

截图工具: gnome-screenshot  
App path:  /usr/share/applications

How I can change columns headers from letters to numbers in LibreOffice Calc?
        Go to:
                Tools -> Options -> LibeOffice Calc -> Forumula
                And then change the Formula syntax dropdown to: Excel R1C1

sudo apt-get install apt-file
sudo apt-file update
apt-file search libgstreamer-0.10.so.0
sudo apt-get install libgstreamer0.10-0

apt-file search libgstapp-0.10.so.0
sudo apt-get install libgstreamer-plugins-base0.10-0
sudo  apt-get  install maven2   libeigen2-dev   libeigen3-dev

sudo apt-cache search  boost  
sudo apt-cache search  eigen
sudo  aptitude  install  libboost-dbg  libboost-dev  libboost-doc libboost-filesystem-dev  libboost-log-dev   libboost-system-dev  libboost-thread-dev
sudo  aptitude  install  libboost-all-dev    libboost-atomic-dev    libboost-chrono-dev    libboost-context-dev    libboost-locale-dev   libboost-math-dev

sudo aptitude install  bonnie++  gnuplot  gnuplot-doc  gnuplot-mode  gnuplot-nox  gnuplot-qt  gnuplot-x11
sudo cpan install PerlIO::gzip 
sudo cpan install  GD::Graph::bars

## apt-cache search gsl
sudo apt-get install libgsl0-dbg  libgsl0-dev libgsl0ldbl gsl-doc-info gsl-doc-pdf gsl-bin gsl-ref-html gsl-ref-psdoc
sudo pip install   pyBigWig
sudo pip install pysam   coverage eta swalign
sudo apt-get install perl-doc

sudo  -H  pip install   setuptools
sudo  -H  pip install   pyparsing 
sudo  -H  pip install   cython 
sudo  -H  pip install   numpy 
sudo  -H  pip install   MySQL-python 
sudo  -H  pip install   PyYAML 
sudo  -H  pip install   alignlib-lite 
sudo  -H  pip install   biopython 
sudo  -H  pip install   drmaa
sudo  -H  pip install   hgapi
sudo  -H  pip install   matplotlib-venn
sudo  -H  pip install   matplotlib
sudo  -H  pip install   networkx
sudo  -H  pip install   openpyxl
sudo  -H  pip install   pandas
sudo  -H  pip install   pysam
sudo  -H  pip install   rdflib
sudo  -H  pip install   psycopg2
sudo  -H  pip install   rpy2
sudo  -H  pip install   ruffus
sudo  -H  pip install   scipy
sudo  -H  pip install   bx-python
sudo  -H  pip install   sphinx 
sudo  -H  pip install   sphinxcontrib-programoutput 
sudo  -H  pip install   sqlalchemy 
sudo  -H  pip install   threadpool 
sudo  -H  pip install   web.py 
sudo  -H  pip install   weblogo 
sudo  -H  pip install   xlwt 
sudo  -H  pip install   pybedtools 
sudo  -H  pip install   pep8 
sudo  -H  pip install   CGATReport 
sudo  -H  pip install   cgat
###############################################################################################################################################################
























